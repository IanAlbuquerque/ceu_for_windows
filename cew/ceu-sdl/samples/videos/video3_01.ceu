#ifndef ALL

#include "sdl.ceu";

input void SDL_QUIT;
input void SDL_REDRAW;

var _SDL_Window[] win;
finalize
    win = _SDL_CreateWindow("SDL APP 3", 200,200, 640,480, 0);
with
    _SDL_DestroyWindow(win);
end

var _SDL_Renderer[] ren;
finalize
    ren = _SDL_CreateRenderer(win, -1, 0);
with
    _SDL_DestroyRenderer(ren);
end

#else

_SDL_SetWindowTitle(win, "Organisms");

#endif

var _SDL_Rect bg;
bg.w = 2000;
bg.h = 2000;
bg.x = 0;
bg.y = 0;

class Rect3 with
    var _SDL_Rect r;
    var int dt;
    var _SDL_Renderer[] ren;
do
    this.r.w = 100;
    this.r.h = 100;
    this.r.x = 20;

    //par/or do
    par do
        loop i do //, 500 do
            await (dt)ms;
            r.x = r.x + 1;
        end
    with
        loop do
            await SDL_REDRAW;
            _SDL_SetRenderDrawColor(ren, 0xFF,0xFF,0xFF, 0);
            _SDL_RenderFillRect(ren, &r);
        end
    end
end

par/or do
    loop do
        await SDL_REDRAW;
        _SDL_SetRenderDrawColor(ren, 0x00,0x00,0x00, 0);
        _SDL_RenderFillRect(ren, &bg);
    end
with
    var Rect3 a with
        _.r.y = 100;
        _.dt  = 10;
        _.ren := ren;
    end;

    var Rect3 b with
        _.r.y = 300;
        _.dt  = 5;
        _.ren := ren;
    end;

    //await 5s;
    //_printf("%d %d\n", a.r.x, b.r.x);

    await FOREVER;
with
    loop do
        await SDL_REDRAW;
        _SDL_RenderPresent(ren);
    end
with
    await SDL_QUIT;
end

escape 0;
