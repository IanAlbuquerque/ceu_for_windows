#ifndef ALL

#include "sdl.ceu";

input void SDL_QUIT;
input void SDL_REDRAW;
input void SDL_MOUSEBUTTONDOWN;

var _SDL_Window[] win;
finalize
    win = _SDL_CreateWindow("SDL APP 9", 200,200, 640,480, 0);
with
    _SDL_DestroyWindow(win);
end

var _SDL_Renderer[] ren;
finalize
    ren = _SDL_CreateRenderer(win, -1, 0);
with
    _SDL_DestroyRenderer(ren);
end

#else

_SDL_SetWindowTitle(win, "Lexical scope: pools");

#endif

var _SDL_Rect bg;
bg.w = 2000;
bg.h = 2000;
bg.x = 0;
bg.y = 0;

class Rect9 with
    var _SDL_Rect r;
    var int dt;
    var _SDL_Renderer[] ren;
do
    this.r.w = 10;
    this.r.h = 10;
    this.r.x = 20;

    par do
    //par/or do
        loop i do //, 500 do
            await (dt)ms;
            r.x = r.x + 1;
        end
    with
        loop do
            await SDL_REDRAW;
            _SDL_SetRenderDrawColor(ren, 0xFF,0xFF,0xFF, 0);
            _SDL_RenderFillRect(ren, &r);
        end
    end
end

par/or do
    loop do
        await SDL_REDRAW;
        _SDL_SetRenderDrawColor(ren, 0x00,0x00,0x00, 0);
        _SDL_RenderFillRect(ren, &bg);
    end
with
    native _rand();
    //var Rect9* a;
    loop do
        par/or do
            do
                pool Rect9[] rs;
                loop do
                    spawn Rect9 in rs with
                        this.r.y = 20 + _rand()%400;
                        this.dt  = 10 + _rand()%10;
                        this.ren = ren;
                    end;
                    await 1s;
                end
            end
        with
            await SDL_MOUSEBUTTONDOWN;
        end
    end
with
    loop do
        await SDL_REDRAW;
        _SDL_RenderPresent(ren);
    end
with
    await SDL_QUIT;
end

escape 0;
