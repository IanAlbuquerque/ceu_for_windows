output (_reqid,int)        _LINE_request;
output _reqid              _LINE_cancel;
input  (_reqid,_ret,char*) _LINE_return;

var int _ret;    // 0=success
var char* v;

par/or do
    var _reqid id = _ceu_sys_request();
    emit _LINE_request => (id, 10);
    finalize with
        _ceu_sys_unrequest(id);
        emit _LINE_cancel => id;
    end
    (id', ret, v) = await LINE_return
                    until id == id';
with
    await 10s;
end

//////////////////////

input  (_reqid,int)        _LINE_request;
input  _reqid              _LINE_cancel;
output (_reqid,_ret,char*) _LINE_return;

class [10] Line with
    var _reqid id;
    var int max;
do
    finalize with
        emit _LINE_return => (this.id,XX,null);
    end
    par/or do
        var char* line;
        ...
        emit _LINE_return => (this.id, 0, line);
// TODO: escape?
    with
        await 10s;
    with
        var int v = await _LINE_cancel
                    until v == this.id;
    end
// TODO: emit ERR?
end

par/or do
    do
        var reqid id;
        var int max;
        every (id,max) = _LINE_request do
            var bool ok? = spawn Line with
                this.id = id;
                this.max = x;
            end
            if not ok? then
                emit _LINE_return => (id,XX,null);
            end
        end
    end
with
    ...
end
